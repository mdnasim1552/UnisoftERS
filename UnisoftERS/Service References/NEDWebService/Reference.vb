'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace NEDWebService
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SendResponse", [Namespace]:="http://www.weblogik.co.uk/types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SendResponse
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ExceptionMessageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QueuedField As Boolean
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExceptionMessage() As String
            Get
                Return Me.ExceptionMessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExceptionMessageField, value) <> true) Then
                    Me.ExceptionMessageField = value
                    Me.RaisePropertyChanged("ExceptionMessage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Queued() As Boolean
            Get
                Return Me.QueuedField
            End Get
            Set
                If (Me.QueuedField.Equals(value) <> true) Then
                    Me.QueuedField = value
                    Me.RaisePropertyChanged("Queued")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="GetResponse", [Namespace]:="http://www.weblogik.co.uk/types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class GetResponse
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ExceptionMessageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MessageDataField() As Byte
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExceptionMessage() As String
            Get
                Return Me.ExceptionMessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExceptionMessageField, value) <> true) Then
                    Me.ExceptionMessageField = value
                    Me.RaisePropertyChanged("ExceptionMessage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MessageData() As Byte()
            Get
                Return Me.MessageDataField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MessageDataField, value) <> true) Then
                    Me.MessageDataField = value
                    Me.RaisePropertyChanged("MessageData")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CheckResponse", [Namespace]:="http://www.weblogik.co.uk/types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class CheckResponse
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ExceptionMessageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RegisteredField As Boolean
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExceptionMessage() As String
            Get
                Return Me.ExceptionMessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExceptionMessageField, value) <> true) Then
                    Me.ExceptionMessageField = value
                    Me.RaisePropertyChanged("ExceptionMessage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Registered() As Boolean
            Get
                Return Me.RegisteredField
            End Get
            Set
                If (Me.RegisteredField.Equals(value) <> true) Then
                    Me.RegisteredField = value
                    Me.RaisePropertyChanged("Registered")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SummaryResponse", [Namespace]:="http://www.weblogik.co.uk/types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SummaryResponse
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ExceptionMessageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProcessedField As Boolean
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExceptionMessage() As String
            Get
                Return Me.ExceptionMessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExceptionMessageField, value) <> true) Then
                    Me.ExceptionMessageField = value
                    Me.RaisePropertyChanged("ExceptionMessage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Processed() As Boolean
            Get
                Return Me.ProcessedField
            End Get
            Set
                If (Me.ProcessedField.Equals(value) <> true) Then
                    Me.ProcessedField = value
                    Me.RaisePropertyChanged("Processed")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://Microsoft.ServiceModel.Samples", ConfigurationName:="NEDWebService.IWebService")>  _
    Public Interface IWebService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/Send", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/SendResponse")>  _
        Function Send(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal batchId As String, ByVal messageData() As Byte, ByVal isCompressed As Boolean) As NEDWebService.SendResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/Send", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/SendResponse")>  _
        Function SendAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal batchId As String, ByVal messageData() As Byte, ByVal isCompressed As Boolean) As System.Threading.Tasks.Task(Of NEDWebService.SendResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/GetMultiple", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/GetMultipleResponse")>  _
        Function GetMultiple(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal supplierBatchId() As String) As NEDWebService.GetResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/GetMultiple", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/GetMultipleResponse")>  _
        Function GetMultipleAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal supplierBatchId() As String) As System.Threading.Tasks.Task(Of NEDWebService.GetResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/GetSingle", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/GetSingleResponse")>  _
        Function GetSingle(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal supplierBatchId As String) As NEDWebService.GetResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/GetSingle", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/GetSingleResponse")>  _
        Function GetSingleAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal supplierBatchId As String) As System.Threading.Tasks.Task(Of NEDWebService.GetResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/DeleteMultiple", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/DeleteMultipleResponse")>  _
        Function DeleteMultiple(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal siteCode As String, ByVal localProcedureId() As String) As NEDWebService.GetResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/DeleteMultiple", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/DeleteMultipleResponse")>  _
        Function DeleteMultipleAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal siteCode As String, ByVal localProcedureId() As String) As System.Threading.Tasks.Task(Of NEDWebService.GetResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/DeleteSingle", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/DeleteSingleResponse")>  _
        Function DeleteSingle(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal siteCode As String, ByVal localProcedureId As String) As NEDWebService.GetResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/DeleteSingle", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/DeleteSingleResponse")>  _
        Function DeleteSingleAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal siteCode As String, ByVal localProcedureId As String) As System.Threading.Tasks.Task(Of NEDWebService.GetResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/Ping", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/PingResponse")>  _
        Function Ping() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/Ping", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/PingResponse")>  _
        Function PingAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/CheckValidIdentifier", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/CheckValidIdentifierResponse")>  _
        Function CheckValidIdentifier(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal ProfessionalBodyCode As String) As NEDWebService.CheckResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/CheckValidIdentifier", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/CheckValidIdentifierResponse")>  _
        Function CheckValidIdentifierAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal ProfessionalBodyCode As String) As System.Threading.Tasks.Task(Of NEDWebService.CheckResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/SendProcedureSummary", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/SendProcedureSummaryResponse")>  _
        Function SendProcedureSummary(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal messageData() As Byte) As NEDWebService.SummaryResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/IWebService/SendProcedureSummary", ReplyAction:="http://Microsoft.ServiceModel.Samples/IWebService/SendProcedureSummaryResponse")>  _
        Function SendProcedureSummaryAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal messageData() As Byte) As System.Threading.Tasks.Task(Of NEDWebService.SummaryResponse)
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IWebServiceChannel
        Inherits NEDWebService.IWebService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class WebServiceClient
        Inherits System.ServiceModel.ClientBase(Of NEDWebService.IWebService)
        Implements NEDWebService.IWebService
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function Send(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal batchId As String, ByVal messageData() As Byte, ByVal isCompressed As Boolean) As NEDWebService.SendResponse Implements NEDWebService.IWebService.Send
            Return MyBase.Channel.Send(organisationApiKey, organisationCode, batchId, messageData, isCompressed)
        End Function
        
        Public Function SendAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal batchId As String, ByVal messageData() As Byte, ByVal isCompressed As Boolean) As System.Threading.Tasks.Task(Of NEDWebService.SendResponse) Implements NEDWebService.IWebService.SendAsync
            Return MyBase.Channel.SendAsync(organisationApiKey, organisationCode, batchId, messageData, isCompressed)
        End Function
        
        Public Function GetMultiple(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal supplierBatchId() As String) As NEDWebService.GetResponse Implements NEDWebService.IWebService.GetMultiple
            Return MyBase.Channel.GetMultiple(organisationApiKey, organisationCode, supplierBatchId)
        End Function
        
        Public Function GetMultipleAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal supplierBatchId() As String) As System.Threading.Tasks.Task(Of NEDWebService.GetResponse) Implements NEDWebService.IWebService.GetMultipleAsync
            Return MyBase.Channel.GetMultipleAsync(organisationApiKey, organisationCode, supplierBatchId)
        End Function
        
        Public Function GetSingle(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal supplierBatchId As String) As NEDWebService.GetResponse Implements NEDWebService.IWebService.GetSingle
            Return MyBase.Channel.GetSingle(organisationApiKey, organisationCode, supplierBatchId)
        End Function
        
        Public Function GetSingleAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal supplierBatchId As String) As System.Threading.Tasks.Task(Of NEDWebService.GetResponse) Implements NEDWebService.IWebService.GetSingleAsync
            Return MyBase.Channel.GetSingleAsync(organisationApiKey, organisationCode, supplierBatchId)
        End Function
        
        Public Function DeleteMultiple(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal siteCode As String, ByVal localProcedureId() As String) As NEDWebService.GetResponse Implements NEDWebService.IWebService.DeleteMultiple
            Return MyBase.Channel.DeleteMultiple(organisationApiKey, organisationCode, siteCode, localProcedureId)
        End Function
        
        Public Function DeleteMultipleAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal siteCode As String, ByVal localProcedureId() As String) As System.Threading.Tasks.Task(Of NEDWebService.GetResponse) Implements NEDWebService.IWebService.DeleteMultipleAsync
            Return MyBase.Channel.DeleteMultipleAsync(organisationApiKey, organisationCode, siteCode, localProcedureId)
        End Function
        
        Public Function DeleteSingle(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal siteCode As String, ByVal localProcedureId As String) As NEDWebService.GetResponse Implements NEDWebService.IWebService.DeleteSingle
            Return MyBase.Channel.DeleteSingle(organisationApiKey, organisationCode, siteCode, localProcedureId)
        End Function
        
        Public Function DeleteSingleAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal siteCode As String, ByVal localProcedureId As String) As System.Threading.Tasks.Task(Of NEDWebService.GetResponse) Implements NEDWebService.IWebService.DeleteSingleAsync
            Return MyBase.Channel.DeleteSingleAsync(organisationApiKey, organisationCode, siteCode, localProcedureId)
        End Function
        
        Public Function Ping() As String Implements NEDWebService.IWebService.Ping
            Return MyBase.Channel.Ping
        End Function
        
        Public Function PingAsync() As System.Threading.Tasks.Task(Of String) Implements NEDWebService.IWebService.PingAsync
            Return MyBase.Channel.PingAsync
        End Function
        
        Public Function CheckValidIdentifier(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal ProfessionalBodyCode As String) As NEDWebService.CheckResponse Implements NEDWebService.IWebService.CheckValidIdentifier
            Return MyBase.Channel.CheckValidIdentifier(organisationApiKey, organisationCode, ProfessionalBodyCode)
        End Function
        
        Public Function CheckValidIdentifierAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal ProfessionalBodyCode As String) As System.Threading.Tasks.Task(Of NEDWebService.CheckResponse) Implements NEDWebService.IWebService.CheckValidIdentifierAsync
            Return MyBase.Channel.CheckValidIdentifierAsync(organisationApiKey, organisationCode, ProfessionalBodyCode)
        End Function
        
        Public Function SendProcedureSummary(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal messageData() As Byte) As NEDWebService.SummaryResponse Implements NEDWebService.IWebService.SendProcedureSummary
            Return MyBase.Channel.SendProcedureSummary(organisationApiKey, organisationCode, messageData)
        End Function
        
        Public Function SendProcedureSummaryAsync(ByVal organisationApiKey As String, ByVal organisationCode As String, ByVal messageData() As Byte) As System.Threading.Tasks.Task(Of NEDWebService.SummaryResponse) Implements NEDWebService.IWebService.SendProcedureSummaryAsync
            Return MyBase.Channel.SendProcedureSummaryAsync(organisationApiKey, organisationCode, messageData)
        End Function
    End Class
End Namespace
